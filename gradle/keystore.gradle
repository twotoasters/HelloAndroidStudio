/*
    Usage: (1) Apply this gradle build file in your build.gradle and (2) set default values in your release signing config

        android {
            signingConfigs {
                release {
                    storeFile file("release-keystore.jks")

                    // These two lines make gradle believe that the signingConfigs section is complete.
                    // Without them, tasks like installRelease will not be available!
                    keyAlias 'PROMPT_DEV'
                    storePassword 'PROMPT_DEV'
                    keyPassword 'PROMPT_DEV'
                }
            }
        }
*/

import groovy.swing.SwingBuilder

gradle.taskGraph.whenReady { taskGraph ->
    taskGraph.getAllTasks().each() { task ->
        println task.name
        if (task.name.endsWith('packageRelease')) {
            android.signingConfigs.release.storePassword = promptDev('KeyStore', 'Please enter the keystore password: ').toString();
            android.signingConfigs.release.keyAlias = promptDev('Alias', 'Please enter the key alias name: ').toString()
            android.signingConfigs.release.keyPassword = promptDev('Key', 'Please enter the key password: ').toString()
        }
    }
}

def promptDev(dialogTitle, promptText) {
    def pass = ''
    if (System.console() == null) {
        new SwingBuilder().edt {
            dialog(modal: true,
                    title: dialogTitle,
                    alwaysOnTop: true,
                    resizable: false,
                    locationRelativeTo: null,
                    pack: true,
                    show: true
            ) {
                vbox {
                    label(text: promptText)
                    input = passwordField()
                    button(defaultButton: true, text: 'OK', actionPerformed: {
                        pass = input.password;
                        dispose();
                    })
                }
            }
        }
    } else {
        pass = System.console().readPassword('\n' + promptText)
        pass = new String(pass)
    }

    if (pass.size() <= 0) {
        throw new InvalidUserDataException("You must enter a password to proceed.")
    }

    return pass
}
